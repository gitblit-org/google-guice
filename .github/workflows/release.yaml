# This workflow will build the servlet extension and deploy it to the gitblit-maven repository.

name: Release to Gitblit Maven repository

on:
  push:
    branches: [ "gitblit-guice" ]
    tags: [ "*-gb*" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      GH_ORG: gitblit
      RELEASE_BRANCH: gitblit-guice

    steps:
      - name: Get event environment
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"

      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Check if tag is on release branch
        id: check-tag
        run: |
          on_rel_branch=false
          if [ "$GITHUB_REF_TYPE" == "tag" ] ; then
            git fetch --depth=5 origin +refs/heads/${RELEASE_BRANCH}:refs/remotes/origin/${RELEASE_BRANCH}
            # We only want to release tags that are on the gitblit-guice branch
            on_branch=$(git branch -r --contains tags/${GITHUB_REF_NAME} --format='%(refname:short)' | grep origin/${RELEASE_BRANCH})
            if [ -n "$on_branch" ] ; then
              on_rel_branch=true
            else
              echo "Tag ${GITHUB_REF_NAME} is not on release branch ${RELEASE_BRANCH}."
            fi
          fi
          echo "on_rel_branch=${on_rel_branch}" >> ${GITHUB_OUTPUT}

      - uses: actions/checkout@v3
        with:
          repository: ${{ env.GH_ORG }}/gitblit-maven
          token: ${{ secrets.GITBLIT_RELEASE_PAT }}
          ref: 'gh-pages'
          path: 'gitblit-maven'
          fetch-depth: 0
      - name: Restore file modification times
        working-directory: gitblit-maven
        run: |
          git fetch origin +refs/heads/tools:refs/remotes/origin/tools
          git restore --source=origin/tools tools/
          bash tools/restore-mtime.sh

      - name: Set up Git properties
        run: |
          set -x
          git config --global user.name ${{ github.event.pusher.name }}
          git config --global user.email ${{ github.event.pusher.email }}

      - name: Build and deploy with Maven - gh-pages repo
        working-directory: extensions/servlet
        run: |
          mvn -B -P'!standard-with-extra-repos' deploy -DaltDeploymentRepository=local::default::file:../../gitblit-maven
        
      - name: Update gitblit maven - gh-pages repo
        if: ${{ github.ref_type == 'tag' }}
        working-directory: gitblit-maven
        run: |
          ant -f tools/ant-update-index.xml
          rm -rf tools
          if [[ -n "$(git status --short)" ]] ; then
            git add .
            git commit -m "Release guice-servlet ${{ github.ref_name}} artifacts"
          fi

      - name: Build and deploy with Maven - packages repo
        if: ${{ steps.check-tag.outputs.on_rel_branch == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITBLIT_RELEASE_PAT }}
        working-directory: extensions/servlet
        run: |
          mvn -B -P'!standard-with-extra-repos' deploy -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ env.GH_ORG }}/gitblit-maven

      - name: Push to gitblit maven - gh-pages repo
        if: ${{ steps.check-tag.outputs.on_rel_branch == 'true' }}
        working-directory: gitblit-maven
        run: |
          git push origin gh-pages
